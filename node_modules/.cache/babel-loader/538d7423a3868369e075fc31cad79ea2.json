{"ast":null,"code":"// eslint-disable-next-line no-control-regex\nconst actionMessageRegex = /^\\u0001ACTION ([^\\u0001]+)\\u0001$/;\nconst justinFanRegex = /^(justinfan)(\\d+$)/;\nconst unescapeIRCRegex = /\\\\([sn:r\\\\])/g;\nconst escapeIRCRegex = /([ \\n;\\r\\\\])/g;\nconst ircEscapedChars = {\n  s: ' ',\n  n: '',\n  ':': ';',\n  r: ''\n};\nconst ircUnescapedChars = {\n  ' ': 's',\n  '\\n': 'n',\n  ';': ':',\n  '\\r': 'r'\n};\nconst urlRegex = new RegExp('^(?:(?:https?|ftp)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?)(?::\\\\d{2,5})?(?:[/?#]\\\\S*)?$', 'i');\nconst regexEmoteRegex = /[|\\\\^$*+?:#]/;\n\nconst _ = module.exports = {\n  // Return the second value if the first value is undefined..\n  get: (a, b) => typeof a === 'undefined' ? b : a,\n  // Indirectly use hasOwnProperty\n  hasOwn: (obj, key) => ({}).hasOwnProperty.call(obj, key),\n  // Race a promise against a delay..\n  promiseDelay: time => new Promise(resolve => setTimeout(resolve, time)),\n  // Value is a finite number..\n  isFinite: int => isFinite(int) && !isNaN(parseFloat(int)),\n\n  // Parse string to number. Returns NaN if string can't be parsed to number..\n  toNumber(num, precision) {\n    if (num === null) {\n      return 0;\n    }\n\n    const factor = Math.pow(10, _.isFinite(precision) ? precision : 0);\n    return Math.round(num * factor) / factor;\n  },\n\n  // Value is an integer..\n  isInteger: int => !isNaN(_.toNumber(int, 0)),\n  // Value is a regex..\n  isRegex: str => regexEmoteRegex.test(str),\n  // Value is a valid url..\n  isURL: str => urlRegex.test(str),\n  // Return a random justinfan username..\n  justinfan: () => `justinfan${Math.floor(Math.random() * 80000 + 1000)}`,\n  // Username is a justinfan username..\n  isJustinfan: username => justinFanRegex.test(username),\n\n  // Return a valid channel name..\n  channel(str) {\n    const channel = (str ? str : '').toLowerCase();\n    return channel[0] === '#' ? channel : '#' + channel;\n  },\n\n  // Return a valid username..\n  username(str) {\n    const username = (str ? str : '').toLowerCase();\n    return username[0] === '#' ? username.slice(1) : username;\n  },\n\n  // Return a valid token..\n  token: str => str ? str.toLowerCase().replace('oauth:', '') : '',\n\n  // Return a valid password..\n  password(str) {\n    const token = _.token(str);\n\n    return token ? `oauth:${token}` : '';\n  },\n\n  actionMessage: msg => msg.match(actionMessageRegex),\n\n  // Replace all occurences of a string using an object..\n  replaceAll(str, obj) {\n    if (str === null || typeof str === 'undefined') {\n      return null;\n    }\n\n    for (const x in obj) {\n      str = str.replace(new RegExp(x, 'g'), obj[x]);\n    }\n\n    return str;\n  },\n\n  unescapeHtml: safe => safe.replace(/\\\\&amp\\\\;/g, '&').replace(/\\\\&lt\\\\;/g, '<').replace(/\\\\&gt\\\\;/g, '>').replace(/\\\\&quot\\\\;/g, '\"').replace(/\\\\&#039\\\\;/g, '\\''),\n\n  // Escaping values:\n  // http://ircv3.net/specs/core/message-tags-3.2.html#escaping-values\n  unescapeIRC(msg) {\n    if (!msg || typeof msg !== 'string' || !msg.includes('\\\\')) {\n      return msg;\n    }\n\n    return msg.replace(unescapeIRCRegex, (m, p) => p in ircEscapedChars ? ircEscapedChars[p] : p);\n  },\n\n  escapeIRC(msg) {\n    if (!msg || typeof msg !== 'string') {\n      return msg;\n    }\n\n    return msg.replace(escapeIRCRegex, (m, p) => p in ircUnescapedChars ? `\\\\${ircUnescapedChars[p]}` : p);\n  },\n\n  // Add word to a string..\n  addWord: (line, word) => line.length ? line + ' ' + word : line + word,\n\n  // Split a line but try not to cut a word in half..\n  splitLine(input, length) {\n    let lastSpace = input.substring(0, length).lastIndexOf(' '); // No spaces found, split at the very end to avoid a loop..\n\n    if (lastSpace === -1) {\n      lastSpace = length - 1;\n    }\n\n    return [input.substring(0, lastSpace), input.substring(lastSpace + 1)];\n  },\n\n  // Extract a number from a string..\n  extractNumber(str) {\n    const parts = str.split(' ');\n\n    for (let i = 0; i < parts.length; i++) {\n      if (_.isInteger(parts[i])) {\n        return ~~parts[i];\n      }\n    }\n\n    return 0;\n  },\n\n  // Format the date..\n  formatDate(date) {\n    let hours = date.getHours();\n    let mins = date.getMinutes();\n    hours = (hours < 10 ? '0' : '') + hours;\n    mins = (mins < 10 ? '0' : '') + mins;\n    return `${hours}:${mins}`;\n  },\n\n  // Inherit the prototype methods from one constructor into another..\n  inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    const TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  },\n\n  // Return whether inside a Node application or not..\n  isNode() {\n    try {\n      return typeof process === 'object' && Object.prototype.toString.call(process) === '[object process]';\n    } catch (e) {}\n\n    return false;\n  }\n\n};","map":{"version":3,"sources":["D:/Programming Projects/twitch-chat-combiner-js/node_modules/tmi.js/lib/utils.js"],"names":["actionMessageRegex","justinFanRegex","unescapeIRCRegex","escapeIRCRegex","ircEscapedChars","s","n","r","ircUnescapedChars","urlRegex","RegExp","regexEmoteRegex","_","module","exports","get","a","b","hasOwn","obj","key","hasOwnProperty","call","promiseDelay","time","Promise","resolve","setTimeout","isFinite","int","isNaN","parseFloat","toNumber","num","precision","factor","Math","pow","round","isInteger","isRegex","str","test","isURL","justinfan","floor","random","isJustinfan","username","channel","toLowerCase","slice","token","replace","password","actionMessage","msg","match","replaceAll","x","unescapeHtml","safe","unescapeIRC","includes","m","p","escapeIRC","addWord","line","word","length","splitLine","input","lastSpace","substring","lastIndexOf","extractNumber","parts","split","i","formatDate","date","hours","getHours","mins","getMinutes","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","isNode","process","Object","toString","e"],"mappings":"AAAA;AACA,MAAMA,kBAAkB,GAAG,mCAA3B;AACA,MAAMC,cAAc,GAAG,oBAAvB;AACA,MAAMC,gBAAgB,GAAG,eAAzB;AACA,MAAMC,cAAc,GAAG,eAAvB;AACA,MAAMC,eAAe,GAAG;AAAEC,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE,EAAb;AAAiB,OAAK,GAAtB;AAA2BC,EAAAA,CAAC,EAAE;AAA9B,CAAxB;AACA,MAAMC,iBAAiB,GAAG;AAAE,OAAK,GAAP;AAAY,QAAM,GAAlB;AAAuB,OAAK,GAA5B;AAAiC,QAAM;AAAvC,CAA1B;AACA,MAAMC,QAAQ,GAAG,IAAIC,MAAJ,CAAW,0eAAX,EAAuf,GAAvf,CAAjB;AACA,MAAMC,eAAe,GAAG,cAAxB;;AACA,MAAMC,CAAC,GAAGC,MAAM,CAACC,OAAP,GAAiB;AAC1B;AACAC,EAAAA,GAAG,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU,OAAOD,CAAP,KAAa,WAAb,GAA2BC,CAA3B,GAA+BD,CAFpB;AAI1B;AACAE,EAAAA,MAAM,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAc,CAAC,EAAD,EAAKC,cAAL,CAAoBC,IAApB,CAAyBH,GAAzB,EAA8BC,GAA9B,CALI;AAO1B;AACAG,EAAAA,YAAY,EAAEC,IAAI,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,IAAV,CAAjC,CARI;AAU1B;AACAI,EAAAA,QAAQ,EAAEC,GAAG,IAAID,QAAQ,CAACC,GAAD,CAAR,IAAiB,CAACC,KAAK,CAACC,UAAU,CAACF,GAAD,CAAX,CAXd;;AAa1B;AACAG,EAAAA,QAAQ,CAACC,GAAD,EAAMC,SAAN,EAAiB;AACxB,QAAGD,GAAG,KAAK,IAAX,EAAiB;AAChB,aAAO,CAAP;AACA;;AACD,UAAME,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAazB,CAAC,CAACgB,QAAF,CAAWM,SAAX,IAAwBA,SAAxB,GAAoC,CAAjD,CAAf;AACA,WAAOE,IAAI,CAACE,KAAL,CAAWL,GAAG,GAAGE,MAAjB,IAA2BA,MAAlC;AACA,GApByB;;AAsB1B;AACAI,EAAAA,SAAS,EAAEV,GAAG,IAAI,CAACC,KAAK,CAAClB,CAAC,CAACoB,QAAF,CAAWH,GAAX,EAAgB,CAAhB,CAAD,CAvBE;AAyB1B;AACAW,EAAAA,OAAO,EAAEC,GAAG,IAAI9B,eAAe,CAAC+B,IAAhB,CAAqBD,GAArB,CA1BU;AA4B1B;AACAE,EAAAA,KAAK,EAAEF,GAAG,IAAIhC,QAAQ,CAACiC,IAAT,CAAcD,GAAd,CA7BY;AA+B1B;AACAG,EAAAA,SAAS,EAAE,MAAO,YAAWR,IAAI,CAACS,KAAL,CAAYT,IAAI,CAACU,MAAL,KAAgB,KAAjB,GAA0B,IAArC,CAA2C,EAhC9C;AAkC1B;AACAC,EAAAA,WAAW,EAAEC,QAAQ,IAAI/C,cAAc,CAACyC,IAAf,CAAoBM,QAApB,CAnCC;;AAqC1B;AACAC,EAAAA,OAAO,CAACR,GAAD,EAAM;AACZ,UAAMQ,OAAO,GAAG,CAACR,GAAG,GAAGA,GAAH,GAAS,EAAb,EAAiBS,WAAjB,EAAhB;AACA,WAAOD,OAAO,CAAC,CAAD,CAAP,KAAe,GAAf,GAAqBA,OAArB,GAA+B,MAAMA,OAA5C;AACA,GAzCyB;;AA2C1B;AACAD,EAAAA,QAAQ,CAACP,GAAD,EAAM;AACb,UAAMO,QAAQ,GAAG,CAACP,GAAG,GAAGA,GAAH,GAAS,EAAb,EAAiBS,WAAjB,EAAjB;AACA,WAAOF,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAAhB,GAAsBA,QAAQ,CAACG,KAAT,CAAe,CAAf,CAAtB,GAA0CH,QAAjD;AACA,GA/CyB;;AAiD1B;AACAI,EAAAA,KAAK,EAAEX,GAAG,IAAIA,GAAG,GAAGA,GAAG,CAACS,WAAJ,GAAkBG,OAAlB,CAA0B,QAA1B,EAAoC,EAApC,CAAH,GAA6C,EAlDpC;;AAoD1B;AACAC,EAAAA,QAAQ,CAACb,GAAD,EAAM;AACb,UAAMW,KAAK,GAAGxC,CAAC,CAACwC,KAAF,CAAQX,GAAR,CAAd;;AACA,WAAOW,KAAK,GAAI,SAAQA,KAAM,EAAlB,GAAsB,EAAlC;AACA,GAxDyB;;AA0D1BG,EAAAA,aAAa,EAAEC,GAAG,IAAIA,GAAG,CAACC,KAAJ,CAAUzD,kBAAV,CA1DI;;AA4D1B;AACA0D,EAAAA,UAAU,CAACjB,GAAD,EAAMtB,GAAN,EAAW;AACpB,QAAGsB,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,WAAlC,EAA+C;AAC9C,aAAO,IAAP;AACA;;AACD,SAAK,MAAMkB,CAAX,IAAgBxC,GAAhB,EAAqB;AACpBsB,MAAAA,GAAG,GAAGA,GAAG,CAACY,OAAJ,CAAY,IAAI3C,MAAJ,CAAWiD,CAAX,EAAc,GAAd,CAAZ,EAAgCxC,GAAG,CAACwC,CAAD,CAAnC,CAAN;AACA;;AACD,WAAOlB,GAAP;AACA,GArEyB;;AAuE1BmB,EAAAA,YAAY,EAAEC,IAAI,IACjBA,IAAI,CAACR,OAAL,CAAa,YAAb,EAA2B,GAA3B,EACCA,OADD,CACS,WADT,EACsB,GADtB,EAECA,OAFD,CAES,WAFT,EAEsB,GAFtB,EAGCA,OAHD,CAGS,aAHT,EAGwB,GAHxB,EAICA,OAJD,CAIS,aAJT,EAIwB,IAJxB,CAxEyB;;AA8E1B;AACA;AACAS,EAAAA,WAAW,CAACN,GAAD,EAAM;AAChB,QAAG,CAACA,GAAD,IAAQ,OAAOA,GAAP,KAAe,QAAvB,IAAmC,CAACA,GAAG,CAACO,QAAJ,CAAa,IAAb,CAAvC,EAA2D;AAC1D,aAAOP,GAAP;AACA;;AACD,WAAOA,GAAG,CAACH,OAAJ,CACNnD,gBADM,EAEN,CAAC8D,CAAD,EAAIC,CAAJ,KAAUA,CAAC,IAAI7D,eAAL,GAAuBA,eAAe,CAAC6D,CAAD,CAAtC,GAA4CA,CAFhD,CAAP;AAIA,GAxFyB;;AA0F1BC,EAAAA,SAAS,CAACV,GAAD,EAAM;AACd,QAAG,CAACA,GAAD,IAAQ,OAAOA,GAAP,KAAe,QAA1B,EAAoC;AACnC,aAAOA,GAAP;AACA;;AACD,WAAOA,GAAG,CAACH,OAAJ,CACNlD,cADM,EAEN,CAAC6D,CAAD,EAAIC,CAAJ,KAAUA,CAAC,IAAIzD,iBAAL,GAA0B,KAAIA,iBAAiB,CAACyD,CAAD,CAAI,EAAnD,GAAuDA,CAF3D,CAAP;AAIA,GAlGyB;;AAoG1B;AACAE,EAAAA,OAAO,EAAE,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACE,MAAL,GAAcF,IAAI,GAAG,GAAP,GAAaC,IAA3B,GAAkCD,IAAI,GAAGC,IArGxC;;AAuG1B;AACAE,EAAAA,SAAS,CAACC,KAAD,EAAQF,MAAR,EAAgB;AACxB,QAAIG,SAAS,GAAGD,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAmBJ,MAAnB,EAA2BK,WAA3B,CAAuC,GAAvC,CAAhB,CADwB,CAExB;;AACA,QAAGF,SAAS,KAAK,CAAC,CAAlB,EAAqB;AACpBA,MAAAA,SAAS,GAAGH,MAAM,GAAG,CAArB;AACA;;AACD,WAAO,CAAEE,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAmBD,SAAnB,CAAF,EAAiCD,KAAK,CAACE,SAAN,CAAgBD,SAAS,GAAG,CAA5B,CAAjC,CAAP;AACA,GA/GyB;;AAiH1B;AACAG,EAAAA,aAAa,CAACnC,GAAD,EAAM;AAClB,UAAMoC,KAAK,GAAGpC,GAAG,CAACqC,KAAJ,CAAU,GAAV,CAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACP,MAA1B,EAAkCS,CAAC,EAAnC,EAAuC;AACtC,UAAGnE,CAAC,CAAC2B,SAAF,CAAYsC,KAAK,CAACE,CAAD,CAAjB,CAAH,EAA0B;AACzB,eAAO,CAAC,CAACF,KAAK,CAACE,CAAD,CAAd;AACA;AACD;;AACD,WAAO,CAAP;AACA,GA1HyB;;AA4H1B;AACAC,EAAAA,UAAU,CAACC,IAAD,EAAO;AAChB,QAAIC,KAAK,GAAGD,IAAI,CAACE,QAAL,EAAZ;AACA,QAAIC,IAAI,GAAIH,IAAI,CAACI,UAAL,EAAZ;AAEAH,IAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,EAAR,GAAa,GAAb,GAAmB,EAApB,IAA0BA,KAAlC;AACAE,IAAAA,IAAI,GAAG,CAACA,IAAI,GAAG,EAAP,GAAY,GAAZ,GAAkB,EAAnB,IAAyBA,IAAhC;AACA,WAAQ,GAAEF,KAAM,IAAGE,IAAK,EAAxB;AACA,GApIyB;;AAsI1B;AACAE,EAAAA,QAAQ,CAACC,IAAD,EAAOC,SAAP,EAAkB;AACzBD,IAAAA,IAAI,CAACE,MAAL,GAAcD,SAAd;;AACA,UAAME,QAAQ,GAAG,YAAY,CAAE,CAA/B;;AACAA,IAAAA,QAAQ,CAACC,SAAT,GAAqBH,SAAS,CAACG,SAA/B;AACAJ,IAAAA,IAAI,CAACI,SAAL,GAAiB,IAAID,QAAJ,EAAjB;AACAH,IAAAA,IAAI,CAACI,SAAL,CAAeC,WAAf,GAA6BL,IAA7B;AACA,GA7IyB;;AA+I1B;AACAM,EAAAA,MAAM,GAAG;AACR,QAAI;AACH,aAAO,OAAOC,OAAP,KAAmB,QAAnB,IACNC,MAAM,CAACJ,SAAP,CAAiBK,QAAjB,CAA0B1E,IAA1B,CAA+BwE,OAA/B,MAA4C,kBAD7C;AAEA,KAHD,CAGE,OAAMG,CAAN,EAAS,CAAE;;AACb,WAAO,KAAP;AACA;;AAtJyB,CAA3B","sourcesContent":["// eslint-disable-next-line no-control-regex\nconst actionMessageRegex = /^\\u0001ACTION ([^\\u0001]+)\\u0001$/;\nconst justinFanRegex = /^(justinfan)(\\d+$)/;\nconst unescapeIRCRegex = /\\\\([sn:r\\\\])/g;\nconst escapeIRCRegex = /([ \\n;\\r\\\\])/g;\nconst ircEscapedChars = { s: ' ', n: '', ':': ';', r: '' };\nconst ircUnescapedChars = { ' ': 's', '\\n': 'n', ';': ':', '\\r': 'r' };\nconst urlRegex = new RegExp('^(?:(?:https?|ftp)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?)(?::\\\\d{2,5})?(?:[/?#]\\\\S*)?$', 'i');\nconst regexEmoteRegex = /[|\\\\^$*+?:#]/;\nconst _ = module.exports = {\n\t// Return the second value if the first value is undefined..\n\tget: (a, b) => typeof a === 'undefined' ? b : a,\n\n\t// Indirectly use hasOwnProperty\n\thasOwn: (obj, key) => ({}).hasOwnProperty.call(obj, key),\n\n\t// Race a promise against a delay..\n\tpromiseDelay: time => new Promise(resolve => setTimeout(resolve, time)),\n\n\t// Value is a finite number..\n\tisFinite: int => isFinite(int) && !isNaN(parseFloat(int)),\n\n\t// Parse string to number. Returns NaN if string can't be parsed to number..\n\ttoNumber(num, precision) {\n\t\tif(num === null) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst factor = Math.pow(10, _.isFinite(precision) ? precision : 0);\n\t\treturn Math.round(num * factor) / factor;\n\t},\n\n\t// Value is an integer..\n\tisInteger: int => !isNaN(_.toNumber(int, 0)),\n\n\t// Value is a regex..\n\tisRegex: str => regexEmoteRegex.test(str),\n\n\t// Value is a valid url..\n\tisURL: str => urlRegex.test(str),\n\n\t// Return a random justinfan username..\n\tjustinfan: () => `justinfan${Math.floor((Math.random() * 80000) + 1000)}`,\n\n\t// Username is a justinfan username..\n\tisJustinfan: username => justinFanRegex.test(username),\n\n\t// Return a valid channel name..\n\tchannel(str) {\n\t\tconst channel = (str ? str : '').toLowerCase();\n\t\treturn channel[0] === '#' ? channel : '#' + channel;\n\t},\n\n\t// Return a valid username..\n\tusername(str) {\n\t\tconst username = (str ? str : '').toLowerCase();\n\t\treturn username[0] === '#' ? username.slice(1) : username;\n\t},\n\n\t// Return a valid token..\n\ttoken: str => str ? str.toLowerCase().replace('oauth:', '') : '',\n\n\t// Return a valid password..\n\tpassword(str) {\n\t\tconst token = _.token(str);\n\t\treturn token ? `oauth:${token}` : '';\n\t},\n\n\tactionMessage: msg => msg.match(actionMessageRegex),\n\n\t// Replace all occurences of a string using an object..\n\treplaceAll(str, obj) {\n\t\tif(str === null || typeof str === 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\tfor (const x in obj) {\n\t\t\tstr = str.replace(new RegExp(x, 'g'), obj[x]);\n\t\t}\n\t\treturn str;\n\t},\n\n\tunescapeHtml: safe =>\n\t\tsafe.replace(/\\\\&amp\\\\;/g, '&')\n\t\t.replace(/\\\\&lt\\\\;/g, '<')\n\t\t.replace(/\\\\&gt\\\\;/g, '>')\n\t\t.replace(/\\\\&quot\\\\;/g, '\"')\n\t\t.replace(/\\\\&#039\\\\;/g, '\\''),\n\n\t// Escaping values:\n\t// http://ircv3.net/specs/core/message-tags-3.2.html#escaping-values\n\tunescapeIRC(msg) {\n\t\tif(!msg || typeof msg !== 'string' || !msg.includes('\\\\')) {\n\t\t\treturn msg;\n\t\t}\n\t\treturn msg.replace(\n\t\t\tunescapeIRCRegex,\n\t\t\t(m, p) => p in ircEscapedChars ? ircEscapedChars[p] : p\n\t\t);\n\t},\n\t\n\tescapeIRC(msg) {\n\t\tif(!msg || typeof msg !== 'string') {\n\t\t\treturn msg;\n\t\t}\n\t\treturn msg.replace(\n\t\t\tescapeIRCRegex,\n\t\t\t(m, p) => p in ircUnescapedChars ? `\\\\${ircUnescapedChars[p]}` : p\n\t\t);\n\t},\n\n\t// Add word to a string..\n\taddWord: (line, word) => line.length ? line + ' ' + word : line + word,\n\n\t// Split a line but try not to cut a word in half..\n\tsplitLine(input, length) {\n\t\tlet lastSpace = input.substring(0, length).lastIndexOf(' ');\n\t\t// No spaces found, split at the very end to avoid a loop..\n\t\tif(lastSpace === -1) {\n\t\t\tlastSpace = length - 1;\n\t\t}\n\t\treturn [ input.substring(0, lastSpace), input.substring(lastSpace + 1) ];\n\t},\n\n\t// Extract a number from a string..\n\textractNumber(str) {\n\t\tconst parts = str.split(' ');\n\t\tfor (let i = 0; i < parts.length; i++) {\n\t\t\tif(_.isInteger(parts[i])) {\n\t\t\t\treturn ~~parts[i];\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Format the date..\n\tformatDate(date) {\n\t\tlet hours = date.getHours();\n\t\tlet mins  = date.getMinutes();\n\n\t\thours = (hours < 10 ? '0' : '') + hours;\n\t\tmins = (mins < 10 ? '0' : '') + mins;\n\t\treturn `${hours}:${mins}`;\n\t},\n\n\t// Inherit the prototype methods from one constructor into another..\n\tinherits(ctor, superCtor) {\n\t\tctor.super_ = superCtor;\n\t\tconst TempCtor = function () {};\n\t\tTempCtor.prototype = superCtor.prototype;\n\t\tctor.prototype = new TempCtor();\n\t\tctor.prototype.constructor = ctor;\n\t},\n\n\t// Return whether inside a Node application or not..\n\tisNode() {\n\t\ttry {\n\t\t\treturn typeof process === 'object' &&\n\t\t\t\tObject.prototype.toString.call(process) === '[object process]';\n\t\t} catch(e) {}\n\t\treturn false;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}