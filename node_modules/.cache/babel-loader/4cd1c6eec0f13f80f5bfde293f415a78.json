{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst tmi = require(\"tmi.js\");\n\nexport default _s(props => {\n  _s();\n\n  const client = new tmi.Client({\n    channels: []\n  });\n  const [messages, setMessages] = useState([]);\n  let tempArray = [];\n  client.connect();\n  client.on('message', (channel, tags, message, self) => {\n    // \"Alca: Hello, World!\"\n    console.log(`${tags['display-name']}: ${message}`);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");","map":{"version":3,"sources":["D:/Programming Projects/twitch-chat-combiner-js/src/Components/Messages.tsx"],"names":["useState","tmi","require","props","client","Client","channels","messages","setMessages","tempArray","connect","on","channel","tags","message","self","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAGA,kBAAgBC,KAAD,IAAiB;AAAA;;AAC5B,QAAMC,MAAM,GAAG,IAAIH,GAAG,CAACI,MAAR,CAAe;AAC1BC,IAAAA,QAAQ,EAAE;AADgB,GAAf,CAAf;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIS,SAAS,GAAG,EAAhB;AAEAL,EAAAA,MAAM,CAACM,OAAP;AACAN,EAAAA,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqB,CAACC,OAAD,EAAmBC,IAAnB,EAA8BC,OAA9B,EAA+CC,IAA/C,KAA4D;AAC7E;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEJ,IAAI,CAAC,cAAD,CAAiB,KAAIC,OAAQ,EAAhD;AACH,GAHD;AAIA,sBACI,qCADJ;AAIH,CAhBD","sourcesContent":["import { useState } from \"react\";\r\nconst tmi = require(\"tmi.js\");\r\n\r\n\r\nexport default (props : any) => {\r\n    const client = new tmi.Client({\r\n        channels: []\r\n    });\r\n    const [messages, setMessages] = useState([])\r\n    let tempArray = [];\r\n\r\n    client.connect();\r\n    client.on('message', (channel : string, tags: any, message: string, self:any) => {\r\n        // \"Alca: Hello, World!\"\r\n        console.log(`${tags['display-name']}: ${message}`);\r\n    });\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}