{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming Projects\\\\twitch-chat-combiner-js\\\\src\\\\Components\\\\Messages.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst tmi = require(\"tmi.js\");\n\nlet id = 0;\nlet client;\nexport default _s(props => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [chatClient, setChatClient] = useState();\n  const [channels, setChannels] = useState(props.channels);\n  useEffect(() => {\n    client = new tmi.Client({\n      channels: channels\n    });\n    client.connect();\n    console.log(client);\n  }, []);\n  useEffect(() => {\n    client.channels = channels;\n    client.on('message', (channel, tags, message, self) => {\n      // \"Alca: Hello, World!\"\n      console.log(`${tags['display-name']}: ${message}`);\n    }, [channels]);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: e.value\n      }, e.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}, \"DFBUq3PqMHPWAebTj6A9/F14Clc=\");","map":{"version":3,"sources":["D:/Programming Projects/twitch-chat-combiner-js/src/Components/Messages.tsx"],"names":["useState","useEffect","tmi","require","id","client","props","messages","setMessages","chatClient","setChatClient","channels","setChannels","Client","connect","console","log","on","channel","tags","message","self","map","e","value","key"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AACA,IAAIC,EAAE,GAAG,CAAT;AACA,IAAIC,MAAJ;AACA,kBAAgBC,KAAD,IAAiB;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,EAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACM,KAAK,CAACK,QAAP,CAAxC;AACAV,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,MAAM,GAAG,IAAIH,GAAG,CAACW,MAAR,CAAe;AACpBF,MAAAA,QAAQ,EAAEA;AADU,KAAf,CAAT;AAIAN,IAAAA,MAAM,CAACS,OAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AAEH,GARQ,EAQN,EARM,CAAT;AAYAJ,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,MAAM,CAACM,QAAP,GAAkBA,QAAlB;AACAN,IAAAA,MAAM,CAACY,EAAP,CAAU,SAAV,EAAqB,CAACC,OAAD,EAAiBC,IAAjB,EAA2BC,OAA3B,EAA2CC,IAA3C,KAAwD;AACzE;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEG,IAAI,CAAC,cAAD,CAAiB,KAAIC,OAAQ,EAAhD;AACP,KAHG,EAGD,CAACT,QAAD,CAHC;AAIH,GANQ,CAAT;AAQA,sBACI;AAAA,2BACA;AAAA,gBACKJ,QAAQ,CAACe,GAAT,CAAcC,CAAD,iBAAW;AAAA,kBAAiBA,CAAC,CAACC;AAAnB,SAASD,CAAC,CAACE,GAAX;AAAA;AAAA;AAAA;AAAA,cAAxB;AADL;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAOH,CA/BD","sourcesContent":["import { useState, useEffect } from \"react\";\r\nconst tmi = require(\"tmi.js\");\r\nlet id = 0\r\nlet client:any;\r\nexport default (props : any) => {\r\n    const [messages, setMessages] = useState([])\r\n    const [chatClient, setChatClient] = useState();\r\n    const [channels, setChannels] = useState(props.channels);\r\n    useEffect(() =>{\r\n        client = new tmi.Client({\r\n            channels: channels\r\n        });\r\n        \r\n        client.connect();\r\n        console.log(client)\r\n        \r\n    }, []\r\n\r\n    )\r\n\r\n    useEffect(()=> {\r\n        client.channels = channels\r\n        client.on('message', (channel:string, tags:any, message:string, self:any) => {\r\n            // \"Alca: Hello, World!\"\r\n            console.log(`${tags['display-name']}: ${message}`);\r\n    }, [channels])\r\n    });\r\n                        \r\n    return (\r\n        <>\r\n        <ul>\r\n            {messages.map((e:any) => <li key={e.key}>{e.value}</li>)}\r\n        </ul>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}