{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming Projects\\\\twitch-chat-combiner-js\\\\src\\\\Components\\\\Messages.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst tmi = require(\"tmi.js\");\n\nexport default _s(props => {\n  _s();\n\n  const client = new tmi.Client({\n    channels: []\n  });\n  const [messages, setMessages] = useState([]);\n  let tempArray = [];\n  client.connect();\n  client.on('message', (channel, tags, message, self) => {\n    // \"Alca: Hello, World!\"\n    tempArray.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          color: \"red\"\n        },\n        children: [channel, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          color: \"green\"\n        },\n        children: [tags, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 56\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 97\n      }, this)]\n    }, void 0, true));\n    setMessages(tempArray);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");","map":{"version":3,"sources":["D:/Programming Projects/twitch-chat-combiner-js/src/Components/Messages.tsx"],"names":["useState","tmi","require","props","client","Client","channels","messages","setMessages","tempArray","connect","on","channel","tags","message","self","push","color"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAGA,kBAAgBC,KAAD,IAAiB;AAAA;;AAC5B,QAAMC,MAAM,GAAG,IAAIH,GAAG,CAACI,MAAR,CAAe;AAC1BC,IAAAA,QAAQ,EAAE;AADgB,GAAf,CAAf;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIS,SAAkB,GAAG,EAAzB;AAEAL,EAAAA,MAAM,CAACM,OAAP;AACAN,EAAAA,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqB,CAACC,OAAD,EAAmBC,IAAnB,EAA8BC,OAA9B,EAA+CC,IAA/C,KAA4D;AAC7E;AACAN,IAAAA,SAAS,CAACO,IAAV,eACI;AAAA,8BAAE;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAV;AAAA,mBAA2BL,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAF,eAA2C;AAAG,QAAA,KAAK,EAAE;AAACK,UAAAA,KAAK,EAAE;AAAR,SAAV;AAAA,mBAA6BJ,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3C,oBAAoF;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAApF;AAAA,oBADJ;AAGAN,IAAAA,WAAW,CAACC,SAAD,CAAX;AACH,GAND;AAOA,sBACI,qCADJ;AAIH,CAnBD","sourcesContent":["import { useState } from \"react\";\r\nconst tmi = require(\"tmi.js\");\r\n\r\n\r\nexport default (props : any) => {\r\n    const client = new tmi.Client({\r\n        channels: []\r\n    });\r\n    const [messages, setMessages] = useState([])\r\n    let tempArray:string[] = [];\r\n\r\n    client.connect();\r\n    client.on('message', (channel : string, tags: any, message: string, self:any) => {\r\n        // \"Alca: Hello, World!\"\r\n        tempArray.push(\r\n            <><b style={{color: \"red\"}}>{channel}: </b><b style={{color: \"green\"}}>{tags}: </b> <p>{message}</p></>\r\n        )\r\n        setMessages(tempArray)\r\n    });\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}