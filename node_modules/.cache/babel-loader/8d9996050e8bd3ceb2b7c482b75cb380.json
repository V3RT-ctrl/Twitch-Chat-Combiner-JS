{"ast":null,"code":"// Initialize the queue with a specific delay..\nclass Queue {\n  constructor(defaultDelay) {\n    this.queue = [];\n    this.index = 0;\n    this.defaultDelay = defaultDelay === undefined ? 3000 : defaultDelay;\n  } // Add a new function to the queue..\n\n\n  add(fn, delay) {\n    this.queue.push({\n      fn,\n      delay\n    });\n  } // Go to the next in queue..\n\n\n  next() {\n    const i = this.index++;\n    const at = this.queue[i];\n\n    if (!at) {\n      return;\n    }\n\n    const next = this.queue[this.index];\n    at.fn();\n\n    if (next) {\n      const delay = next.delay === undefined ? this.defaultDelay : next.delay;\n      setTimeout(() => this.next(), delay);\n    }\n  }\n\n}\n\nmodule.exports = Queue;","map":{"version":3,"sources":["D:/Programming Projects/twitch-chat-combiner-js/node_modules/tmi.js/lib/timer.js"],"names":["Queue","constructor","defaultDelay","queue","index","undefined","add","fn","delay","push","next","i","at","setTimeout","module","exports"],"mappings":"AAAA;AACA,MAAMA,KAAN,CAAY;AACXC,EAAAA,WAAW,CAACC,YAAD,EAAe;AACzB,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKF,YAAL,GAAoBA,YAAY,KAAKG,SAAjB,GAA6B,IAA7B,GAAoCH,YAAxD;AACA,GALU,CAMX;;;AACAI,EAAAA,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAY;AACd,SAAKL,KAAL,CAAWM,IAAX,CAAgB;AAAEF,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAhB;AACA,GATU,CAUX;;;AACAE,EAAAA,IAAI,GAAG;AACN,UAAMC,CAAC,GAAG,KAAKP,KAAL,EAAV;AACA,UAAMQ,EAAE,GAAG,KAAKT,KAAL,CAAWQ,CAAX,CAAX;;AACA,QAAG,CAACC,EAAJ,EAAQ;AACP;AACA;;AACD,UAAMF,IAAI,GAAG,KAAKP,KAAL,CAAW,KAAKC,KAAhB,CAAb;AACAQ,IAAAA,EAAE,CAACL,EAAH;;AACA,QAAGG,IAAH,EAAS;AACR,YAAMF,KAAK,GAAGE,IAAI,CAACF,KAAL,KAAeH,SAAf,GAA2B,KAAKH,YAAhC,GAA+CQ,IAAI,CAACF,KAAlE;AACAK,MAAAA,UAAU,CAAC,MAAM,KAAKH,IAAL,EAAP,EAAoBF,KAApB,CAAV;AACA;AACD;;AAvBU;;AA0BZM,MAAM,CAACC,OAAP,GAAiBf,KAAjB","sourcesContent":["// Initialize the queue with a specific delay..\nclass Queue {\n\tconstructor(defaultDelay) {\n\t\tthis.queue = [];\n\t\tthis.index = 0;\n\t\tthis.defaultDelay = defaultDelay === undefined ? 3000 : defaultDelay;\n\t}\n\t// Add a new function to the queue..\n\tadd(fn, delay) {\n\t\tthis.queue.push({ fn, delay });\n\t}\n\t// Go to the next in queue..\n\tnext() {\n\t\tconst i = this.index++;\n\t\tconst at = this.queue[i];\n\t\tif(!at) {\n\t\t\treturn;\n\t\t}\n\t\tconst next = this.queue[this.index];\n\t\tat.fn();\n\t\tif(next) {\n\t\t\tconst delay = next.delay === undefined ? this.defaultDelay : next.delay;\n\t\t\tsetTimeout(() => this.next(), delay);\n\t\t}\n\t}\n}\n\nmodule.exports = Queue;\n"]},"metadata":{},"sourceType":"script"}