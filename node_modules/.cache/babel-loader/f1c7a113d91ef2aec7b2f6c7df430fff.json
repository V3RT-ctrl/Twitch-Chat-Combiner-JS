{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming Projects\\\\twitch-chat-combiner-js\\\\src\\\\Components\\\\Messages.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst tmi = require(\"tmi.js\");\n\nlet id = 0;\nexport default _s(props => {\n  _s();\n\n  const client = new tmi.Client({\n    channels: [\"pigeonapology\"]\n  });\n  const [messages, setMessages] = useState([]);\n  let tempArray = [];\n  client.connect();\n  client.on('message', (channel, tags, message, self) => {\n    // \"Alca: Hello, World!\"\n    let tempID = id;\n    id += 1;\n    tempArray.push({\n      key: tempID,\n      channel: channel,\n      tags: tags,\n      message: message\n    });\n    setMessages(tempArray);\n    console.log(messages);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              color: \"red\"\n            },\n            children: [e.channel, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              color: \"green\"\n            },\n            children: [e.tags, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 58\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: e.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 101\n          }, this)]\n        }, void 0, true)\n      }, e.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");","map":{"version":3,"sources":["D:/Programming Projects/twitch-chat-combiner-js/src/Components/Messages.tsx"],"names":["useState","tmi","require","id","props","client","Client","channels","messages","setMessages","tempArray","connect","on","channel","tags","message","self","tempID","push","key","console","log","map","e","color"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AACA,IAAIC,EAAE,GAAG,CAAT;AAEA,kBAAgBC,KAAD,IAAiB;AAAA;;AAC5B,QAAMC,MAAM,GAAG,IAAIJ,GAAG,CAACK,MAAR,CAAe;AAC1BC,IAAAA,QAAQ,EAAE,CAAC,eAAD;AADgB,GAAf,CAAf;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIU,SAAe,GAAG,EAAtB;AAEAL,EAAAA,MAAM,CAACM,OAAP;AACAN,EAAAA,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqB,CAACC,OAAD,EAAmBC,IAAnB,EAA8BC,OAA9B,EAA+CC,IAA/C,KAA4D;AAC7E;AACA,QAAIC,MAAM,GAAGd,EAAb;AACAA,IAAAA,EAAE,IAAI,CAAN;AACAO,IAAAA,SAAS,CAACQ,IAAV,CACI;AACAC,MAAAA,GAAG,EAAEF,MADL;AAEAJ,MAAAA,OAAO,EAAEA,OAFT;AAGAC,MAAAA,IAAI,EAAEA,IAHN;AAIAC,MAAAA,OAAO,EAAEA;AAJT,KADJ;AAOAN,IAAAA,WAAW,CAACC,SAAD,CAAX;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACH,GAbD;AAcA,sBACI;AAAA,2BACA;AAAA,gBACKA,QAAQ,CAACc,GAAT,CAAcC,CAAD,iBAAY;AAAA,+BAC1B;AAAA,kCAAE;AAAG,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR,aAAV;AAAA,uBAA2BD,CAAC,CAACV,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAF,eAA6C;AAAG,YAAA,KAAK,EAAE;AAACW,cAAAA,KAAK,EAAE;AAAR,aAAV;AAAA,uBAA6BD,CAAC,CAACT,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7C,oBAAwF;AAAA,sBAAIS,CAAC,CAACR;AAAN;AAAA;AAAA;AAAA;AAAA,kBAAxF;AAAA;AAD0B,SAASQ,CAAC,CAACJ,GAAX;AAAA;AAAA;AAAA;AAAA,cAAzB;AADL;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AASH,CA/BD","sourcesContent":["import { useState } from \"react\";\r\nconst tmi = require(\"tmi.js\");\r\nlet id = 0\r\n\r\nexport default (props : any) => {\r\n    const client = new tmi.Client({\r\n        channels: [\"pigeonapology\"]\r\n    });\r\n    const [messages, setMessages] = useState([])\r\n    let tempArray : any = [];\r\n\r\n    client.connect();\r\n    client.on('message', (channel : string, tags: any, message: string, self:any) => {\r\n        // \"Alca: Hello, World!\"\r\n        let tempID = id;\r\n        id += 1;\r\n        tempArray.push(\r\n            {\r\n            key: tempID,\r\n            channel: channel,\r\n            tags: tags,\r\n            message: message,}\r\n        )\r\n        setMessages(tempArray)\r\n        console.log(messages)\r\n    });\r\n    return (\r\n        <>\r\n        <ul>\r\n            {messages.map((e:any) =>  <li key={e.key}>\r\n            <><b style={{color: \"red\"}}>{e.channel}: </b><b style={{color: \"green\"}}>{e.tags}: </b> <p>{e.message}</p></>\r\n                </li>)}\r\n        </ul>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}